# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2020-06-04 09:54
from __future__ import unicode_literals

import ckeditor_uploader.fields
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.file
import filer.fields.image


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('filer', '0007_auto_20161016_1055'),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('address', models.CharField(blank=True, default='', max_length=300, verbose_name='Адрес')),
                ('phones', models.CharField(blank=True, default='', help_text='разделитель ;', max_length=300, verbose_name='Номера телефонов')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('time_work', models.CharField(blank=True, default='', max_length=300, verbose_name='Режим работы')),
                ('coord_x', models.FloatField(blank=True, null=True, verbose_name='Координата X на карте')),
                ('coord_y', models.FloatField(blank=True, null=True, verbose_name='Координата Y на карте')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='HrefModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_path', models.CharField(help_text='путь к объекту(модуль.класс.id)', max_length=500, unique=True, verbose_name='Путь к объекту')),
            ],
            options={
                'verbose_name': 'ссылка на объект',
                'verbose_name_plural': 'ссылки на объект',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(choices=[('ru', 'Russian'), ('en', 'English')], max_length=32, unique=True, verbose_name='Язык')),
                ('name', models.CharField(blank=True, default='', max_length=300, verbose_name='Наименование сайта')),
                ('full_address', models.CharField(blank=True, default='', max_length=300, verbose_name='Полный адрес')),
                ('address', models.CharField(blank=True, default='', max_length=300, verbose_name='Адрес')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('phones', models.CharField(blank=True, default='', help_text='разделитель ;', max_length=300, verbose_name='Номера телефонов')),
                ('time_work', models.CharField(blank=True, default='', max_length=300, verbose_name='Режим работы')),
                ('coord_x', models.FloatField(blank=True, null=True, verbose_name='Координата X на карте')),
                ('coord_y', models.FloatField(blank=True, null=True, verbose_name='Координата Y на карте')),
                ('privacy_policy', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', verbose_name='Политика конфиденциальности')),
                ('personal_data', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', verbose_name='Согласие на обработку персональных данных')),
                ('color_scheme', colorfield.fields.ColorField(default='#006EFF', help_text='HEX color, as #RRGGBB', max_length=18, verbose_name='Цветовая схема сайта')),
                ('color_scheme_alpha', models.CharField(blank=True, default='rgba(0, 110, 255, 0.6)', max_length=50, verbose_name='Цветовая схема c alpha')),
                ('color_scheme_dark', models.CharField(blank=True, default='#000CD4', max_length=7, verbose_name='Цветовая схема затемнение')),
                ('in_product_view', models.CharField(choices=[('classic', 'Классик'), ('wide', 'Широкие')], default='classic', max_length=300, verbose_name='Вид отображения похожих товаров')),
                ('social_view', models.CharField(choices=[('classic', 'Плитка'), ('column', 'Столбец')], default='classic', max_length=300, verbose_name='Вид отображения соц. сетей')),
                ('vkontakte', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на ВК группу')),
                ('facebook', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на fb группу')),
                ('instagram', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на instagram')),
                ('telegram', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на telegram')),
                ('twitter', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на twitter')),
                ('youtube', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на youtube')),
                ('odnoklassniky', models.CharField(blank=True, max_length=300, verbose_name='Ссылка на Одноклассники')),
                ('seo_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', verbose_name='SEO текст')),
                ('meta_title', models.CharField(blank=True, default='', max_length=300, verbose_name='SEO Заголовок')),
                ('meta_description', models.TextField(blank=True, default='', verbose_name='Meta Description')),
                ('meta_template_description', models.TextField(blank=True, default='', verbose_name='Meta template Description')),
                ('meta_keywords', models.TextField(blank=True, default='', help_text='вводить через запятую', verbose_name='Meta Keywords')),
                ('meta_template_title', models.CharField(blank=True, default='', help_text=' ||site|| - имя сайта,\n        ||object|| - имя объекта ', max_length=300, verbose_name='Шаблон для сайта')),
                ('robots_txt', models.TextField(blank=True, default='', verbose_name='robots.txt')),
                ('head_scripts', models.TextField(blank=True, default='', verbose_name='Вывод в head')),
                ('scripts', models.TextField(blank=True, default='', verbose_name='Скрипты под footer')),
                ('mode_payment', models.CharField(blank=True, choices=[('', 'Онлайн оплата отсутствует'), ('https://3dsec.sberbank.ru/payment/', 'Тестовый режим'), ('https://securepayments.sberbank.ru/payment/', 'Боевой режим')], default='', max_length=100, verbose_name='Режим оплаты')),
                ('shop_id', models.CharField(blank=True, default='', max_length=100, verbose_name='Логин api')),
                ('api_key', models.CharField(blank=True, default='', max_length=100, verbose_name='Ключ api')),
                ('banner_text', models.CharField(blank=True, default='', max_length=300, verbose_name='текст баннера')),
                ('bitrix24_key', models.CharField(blank=True, default='', max_length=100, verbose_name='Ключ вебхуков bitrix24')),
                ('bitrix24_domain', models.CharField(blank=True, default='', help_text='Пример: placestart.bitrix24.ru', max_length=100, verbose_name='Домен третьего уровня')),
                ('banner_img', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='banner_img', to=settings.FILER_IMAGE_MODEL, verbose_name='изображение в баннере')),
                ('price_list', filer.fields.file.FilerFileField(blank=True, help_text='Узнайте о нас больше', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='catalog_company', to='filer.File', verbose_name='Прайс лист')),
                ('seo_img1', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seo_img1', to=settings.FILER_IMAGE_MODEL, verbose_name='SEO картинка 1')),
                ('seo_img2', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seo_img2', to=settings.FILER_IMAGE_MODEL, verbose_name='SEO картинка 2')),
                ('seo_img3', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seo_img3', to=settings.FILER_IMAGE_MODEL, verbose_name='SEO картинка 3')),
            ],
            options={
                'verbose_name': 'Настройки сайта',
                'verbose_name_plural': 'Настройки сайта',
                'ordering': ['language'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Заголовок')),
                ('subtitle', models.CharField(blank=True, default='', max_length=300, verbose_name='Подзаголовок')),
                ('link', models.CharField(blank=True, default='', max_length=100, verbose_name='Ссылка')),
                ('sort', models.PositiveIntegerField(default=500, verbose_name='Сортировка')),
                ('image', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='slider_image', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение')),
                ('settings', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slider_items', to='configuration.Settings', verbose_name='Настройки сайта')),
            ],
            options={
                'verbose_name': 'Элемент слайдера',
                'verbose_name_plural': 'Слайдер',
                'ordering': ['sort'],
            },
        ),
        migrations.CreateModel(
            name='TypeShipping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=100, verbose_name='Название')),
                ('show_address', models.BooleanField(default=True, verbose_name='Выводить поля ввода адреса')),
                ('calculation', models.CharField(choices=[('price_out', 'Высчитывается отдельно'), ('price_km', 'Цена за КМ'), ('price_fix', 'Фиксированная цена')], default='price_out', max_length=300, verbose_name='Способ рассчета')),
                ('price_km', models.FloatField(default=0, verbose_name='Цена за КМ')),
                ('price_fix', models.FloatField(default=0, verbose_name='Фиксированная цена')),
                ('cities_free', models.TextField(blank=True, default='', help_text='разделитель ;', verbose_name='Города с бесплатной доставкой')),
                ('cities', models.TextField(blank=True, default='', help_text='разделитель ;', verbose_name='Доставляется только в ...(города)')),
            ],
            options={
                'verbose_name': 'Способ доставки',
                'verbose_name_plural': 'Способы доставки',
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='settings',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_items', to='configuration.Settings', verbose_name='Настройки сайта'),
        ),
    ]
