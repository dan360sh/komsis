# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-09-04 06:35
from __future__ import unicode_literals

import ckeditor_uploader.fields
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unloading_id', models.CharField(blank=True, default='', max_length=300, verbose_name='Идентификатор выгрузки')),
                ('sort', models.IntegerField(default=1, verbose_name='Сортировка')),
            ],
            options={
                'verbose_name_plural': 'Атрибуты',
                'verbose_name': 'атрибут',
                'ordering': ['product', 'sort'],
            },
        ),
        migrations.CreateModel(
            name='AttributesGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unloading_id', models.CharField(blank=True, default='', max_length=300, verbose_name='Идентификатор выгрузки')),
                ('title', models.CharField(max_length=300, null=True, verbose_name='Заголовок')),
                ('type_attr', models.CharField(choices=[('checkbox', 'Checkbox'), ('select', 'Select'), ('range', 'Range')], default='checkbox', max_length=100, null=True, verbose_name='Тип')),
                ('type_value', models.IntegerField(choices=[(0, 'Справочник'), (1, 'Число')], default=0, verbose_name='Тип атрибута')),
                ('show', models.BooleanField(default=True, verbose_name='Показывать в категориях')),
            ],
            options={
                'verbose_name_plural': 'Группы атрибутов',
                'verbose_name': 'группа атрибутов',
            },
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unloading_id', models.CharField(blank=True, default='', max_length=300, verbose_name='Идентификатор выгрузки')),
                ('title', models.TextField(null=True, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name_plural': 'Значения атрибутов',
                'verbose_name': 'Значение атрибута',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Активность')),
                ('title', models.CharField(default='', max_length=300, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name_plural': 'Производители',
                'verbose_name': 'производитель',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('meta_title', models.CharField(blank=True, default='', max_length=300, verbose_name='SEO заголовок')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('meta_keywords', models.TextField(blank=True, null=True, verbose_name='Meta Keywords')),
                ('active', models.BooleanField(default=True, verbose_name='Активность')),
                ('unloading_id', models.CharField(blank=True, default='', max_length=300, verbose_name='Идентификатор выгрузки')),
                ('title', models.CharField(max_length=300, null=True, verbose_name='Наименование')),
                ('slug', models.SlugField(max_length=300, null=True, unique=True, verbose_name='Слаг')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, default='', verbose_name='Описание')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='catalog.Category', verbose_name='Родитель')),
                ('seo_img', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='catalog_category_seo_img', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение')),
                ('thumbnail', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_thumbnail', to=settings.FILER_IMAGE_MODEL, verbose_name='Миниатюра')),
            ],
            options={
                'verbose_name_plural': 'Категории',
                'verbose_name': 'категория',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(default=0, null=True, verbose_name='Цена')),
            ],
            options={
                'verbose_name_plural': 'Цвета',
                'verbose_name': 'цвет',
            },
        ),
        migrations.CreateModel(
            name='ColorValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300, null=True, verbose_name='Заголовок')),
                ('hex_color', colorfield.fields.ColorField(default='#000000', help_text='HEX color, as #RRGGBB', max_length=18, verbose_name='Код')),
            ],
            options={
                'verbose_name_plural': 'Значения цветов',
                'verbose_name': 'значение цвета',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=300, verbose_name='Заголовок')),
            ],
            options={
                'verbose_name_plural': 'Страны',
                'verbose_name': 'страна',
            },
        ),
        migrations.CreateModel(
            name='NumAttribute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unloading_id', models.CharField(blank=True, default='', max_length=300, verbose_name='Идентификатор выгрузки')),
                ('sort', models.IntegerField(default=1, verbose_name='Сортировка')),
                ('value', models.FloatField(verbose_name='Значение атрибута')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='num_attributes', to='catalog.AttributesGroup', verbose_name='Группа')),
            ],
            options={
                'verbose_name_plural': 'Числовые атрибуты',
                'verbose_name': 'Числовой атрибут',
                'ordering': ['product', 'sort'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_text', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Текст')),
                ('meta_title', models.CharField(blank=True, default='', max_length=300, verbose_name='SEO заголовок')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('meta_keywords', models.TextField(blank=True, null=True, verbose_name='Meta Keywords')),
                ('title', models.CharField(max_length=300, null=True, verbose_name='Наименование')),
                ('active', models.BooleanField(default=True, verbose_name='Активность')),
                ('unloading_id', models.CharField(blank=True, default='', max_length=300, verbose_name='Идентификатор выгрузки')),
                ('slug', models.SlugField(blank=True, max_length=300, null=True, unique=True, verbose_name='Слаг')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Описание товара')),
                ('code', models.CharField(blank=True, max_length=300, verbose_name='Код товара')),
                ('price', models.FloatField(default=0, verbose_name='Цена')),
                ('old_price', models.FloatField(default=0, verbose_name='Старая цена')),
                ('wholesale_price', models.FloatField(default=0, verbose_name='Оптовая цена')),
                ('count', models.IntegerField(blank=True, default=0, verbose_name='Количество')),
                ('new', models.BooleanField(default=False, verbose_name='Новинка')),
                ('hit', models.BooleanField(default=False, verbose_name='Хит')),
                ('sale', models.BooleanField(default=False, verbose_name='Распродажа')),
                ('count_showing', models.IntegerField(default=0, verbose_name='Количество просмотров')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_products', to='catalog.Brand', verbose_name='Производитель')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='catalog.Category', verbose_name='Категория')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_child', to='catalog.Product', verbose_name='Товар-родитель')),
                ('seo_img', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='catalog_product_seo_img', to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение')),
                ('thumbnail', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_thumbnail', to=settings.FILER_IMAGE_MODEL, verbose_name='Фотография')),
            ],
            options={
                'verbose_name_plural': 'Товары',
                'verbose_name': 'товар',
            },
        ),
        migrations.CreateModel(
            name='ProductGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField(default=1, verbose_name='Позиция')),
                ('photo', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Изображение')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_gallery', to='catalog.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name_plural': 'Галерея',
                'verbose_name': 'изображение',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='numattribute',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_num_attrbutes', to='catalog.Product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='color',
            name='product',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='catalog.Product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='color',
            name='value',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='colors', to='catalog.ColorValue', verbose_name='Значение'),
        ),
        migrations.AddField(
            model_name='brand',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brands', to='catalog.Country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='catalog.AttributesGroup', verbose_name='Группа'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_attrbutes', to='catalog.Product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='attribute',
            name='value',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='value_attrbutes', to='catalog.AttributeValue', verbose_name='Значение'),
        ),
    ]
