"""
Django settings for system project.

Generated by "django-admin startproject" using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import json
from django.utils.translation import gettext_lazy as _

import sentry_sdk
from sentry_sdk.integrations.django import DjangoIntegration

sentry_sdk.init(
    dsn="",
    integrations=[
        DjangoIntegration(),
    ],
    traces_sample_rate=1.0,
    send_default_pii=True,
    environment="production",
)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "3WCZs{S+$Fm0g2h2dDo/&W)E@`F|]AlSohc$wprA[X@'gOU|,N"
SITE_ID = 1

# SECURITY WARNING: don"t run with debug turned on in production!
DEBUG = False

ADMINS = [('debug', "test.komsis@gmail.com")]

ALLOWED_HOSTS = ["*"]

# Application definition
INSTALLED_APPS = [
    # Кеширование
    # "cacheops",
    # Измененная панель администратора
    "apps.administration",
    # Ядро
    "django.contrib.auth",
    "django.contrib.admin",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sitemaps",
    "django.contrib.postgres",
    "django.contrib.redirects",
    "django.contrib.sites",
    # Сторонние модули
    'import_export',
    "django_mptt_admin",
    "ckeditor",
    "ckeditor_uploader",
    "ajax_select",
    "debug_toolbar",
    "easy_thumbnails",
    "filer",
    "mptt",
    "colorfield",
    "django_elasticsearch_dsl",
    # Дополнения
    "apps.seo",
    "apps.content",
    "apps.feedback",
    "apps.elastic_search",
    # Основные приложения
    "apps.configuration",
    "apps.exchange1c",
    "apps.nav",
    "apps.pages",
    "apps.posts",
    "apps.catalog",
    "apps.account",
    "apps.shop",
    "apps.google_captcha"
]
RESPONSE_CACHE_SECONDS = 300
MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    # 'system.middleware.SetBrowserCacheTimeoutMiddleware',
    # 'django.middleware.cache.UpdateCacheMiddleware',
    # other middlwware here...
    "django.middleware.security.SecurityMiddleware",
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "system.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Требуется для корректной работы приложения настроек сайта
    "django.middleware.locale.LocaleMiddleware",
    # 'django.middleware.cache.FetchFromCacheMiddleware',
    "system.middleware.CreateOrder",
    "django.contrib.redirects.middleware.RedirectFallbackMiddleware",
]
# Key in `CACHES` dict
CACHE_MIDDLEWARE_ALIAS = "default"

# Additional prefix for cache keys
CACHE_MIDDLEWARE_KEY_PREFIX = ""

# Cache key TTL in seconds
# CACHE_MIDDLEWARE_SECONDS = 600

ROOT_URLCONF = "system.urls"

INTERNAL_IPS = ["*", "0.0.0.0", "127.0.0.1",] #"185.253.185.94"]

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.static",
                # Свои контекст процессоры
                "apps.configuration.context_processors.website_settings",
                "apps.shop.context_processors.cart",
            ],
        },
    },
]

WSGI_APPLICATION = "system.wsgi.application"


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "HOST": "postgres",
        "NAME": "db",
        "USER": "root",
        "PASSWORD": "Golova123",
        "CONN_MAX_AGE": 60 * 10,  # 10 minutes
    }
}

# Настройки кеширования
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
    }
}

CELERY_BROKER_URL = "redis://127.0.0.1:6379/0"
CELERY_RESULT_BACKEND = "redis://127.0.0.1:6379/0"

SESSION_SERIALIZER = "django.contrib.sessions.serializers.PickleSerializer"
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# CACHEOPS_DEFAULTS = {
#     "timeout": 60 * 60
# }
# CACHEOPS = {
#     "auth.user": {"ops": "get", "timeout": 60 * 15},
#     "auth.*": {"ops": ("fetch", "get")},
#     "auth.permission": {"ops": "all"},
#     "catalog.*": {"ops": "get", "timeout": 60 * 15},
#     "pages.*": {"ops": "get", "timeout": 60 * 15},
#     "posts.*": {"ops": "get", "timeout": 60 * 15},
#     "*.*": {},
# }


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = ("apps.account.backends.JoinedAccountBackend",)


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = "ru"
LANGUAGES = [("ru", _("Russian")), ("en", _("English"))]

TIME_ZONE = "Europe/Moscow"

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATA_UPLOAD_MAX_MEMORY_SIZE = 5000000000

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = "/static/"
MEDIA_URL = "/media/"

STATIC_ROOT = os.path.join(BASE_DIR, "/static")
MEDIA_ROOT = os.path.join(BASE_DIR, "../newmedia")

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

STATICFILES_FINDERS = [
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    "django.contrib.staticfiles.finders.FileSystemFinder",
]

# Настройки email сервера

# try:
#     SMTP_SETTINGS = json.loads(open(os.path.join(
#         BASE_DIR, "system", "smtp.json"), "r").read())

#     EMAIL_HOST = SMTP_SETTINGS["host"]
#     EMAIL_PORT = SMTP_SETTINGS["port"]
#     EMAIL_HOST_USER = SMTP_SETTINGS["user"]
#     EMAIL_HOST_PASSWORD = SMTP_SETTINGS["password"]
#     EMAIL_USE_SSL = SMTP_SETTINGS["ssl"]
#     DEFAULT_FROM_EMAIL = SMTP_SETTINGS["from"]

# except FileNotFoundError:
#     pass

EMAIL_HOST = "smtp.mail.ru"
EMAIL_PORT = 465
EMAIL_HOST_USER = "noreply@komsis.su"
EMAIL_HOST_PASSWORD = ""
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = "noreply@komsis.su"

# Настройки текстого редактора django-ckeditor

CKEDITOR_UPLOAD_PATH = "uploads/"
CKEDITOR_IMAGE_BACKEND = "pillow"
CKEDITOR_JQUERY_URL = "//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"
CKEDITOR_CONFIGS = {
    "default": {
        "removePlugins": "stylesheetparser",
        "allowedContent": True,
        "toolbar_Full": [
            [
                "Styles",
                "Format",
                "Bold",
                "Italic",
                "Underline",
                "Strike",
                "Subscript",
                "Superscript",
                "-",
                "RemoveFormat",
            ],
            ["Image", "Flash", "Table", "HorizontalRule"],
            ["TextColor", "BGColor"],
            ["Smiley", "sourcearea", "SpecialChar"],
            ["Link", "Unlink", "Anchor"],
            [
                "NumberedList",
                "BulletedList",
                "-",
                "Outdent",
                "Indent",
                "-",
                "Blockquote",
                "CreateDiv",
                "-",
                "JustifyLeft",
                "JustifyCenter",
                "JustifyRight",
                "JustifyBlock",
                "-",
                "BidiLtr",
                "BidiRtl",
                "Language",
            ],
            ["Source", "-", "Save", "NewPage", "Preview", "Print", "-", "Templates"],
            ["Cut", "Copy", "Paste", "PasteText", "PasteFromWord", "-", "Undo", "Redo"],
            ["Find", "Replace", "-", "SelectAll", "-", "Scayt"],
            ["Maximize", "ShowBlocks"],
        ],
    }
}

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Настройки django-filer

THUMBNAIL_HIGH_RESOLUTION = True
THUMBNAIL_PROCESSORS = (
    "easy_thumbnails.processors.colorspace",
    "easy_thumbnails.processors.autocrop",
    "easy_thumbnails.processors.scale_and_crop",
    "filer.thumbnail_processors.scale_and_crop_with_subject_location",
    "easy_thumbnails.processors.filters",
)
FILER_CANONICAL_URL = "attachment-uploads/"

# Настройки пересортировки прложений в панели администратора

ADMIN_REORDER = (
    ("Страницы", ("Страницы", "Наша команда", "Клиенты", "Услуги")),
    ("Записи", ("Post", "Category")),
    (
        "Каталог",
        (
            "Категории",
            "Страны",
            "Производители",
            "Товары",
        ),
    ),
    ("Пользователи и группы", ("Users", "Groups")),
    ("Настройки", ("Settings",)),
    ("Dashboard", ("Dashboards", "Querys", "Query templates", "Charts")),
    ("Content", ("Text",)),
    ("nav", ("Навигация",)),
)

# Настройки навигационного меню в панели администратора

ADMIN_NAVIGATION = [
    {
        "name": "Материалы",
        "apps": (
            ("pages", ("Страницы", "Наша команда", "Клиенты", "Услуги")),
            ("posts", ("Записи",)),
            ("content", ("Контент",)),
        ),
    },
    (
        "catalog",
        (
            "Категории",
            "Производители",
            "Товары",
            "Группы атрибутов",
            "Значения атрибутов",
            "Атрибуты",
        ),
    ),
    ("shop", ("",)),
    ("nav", ("",)),
    ("feedback", ("")),
    ("account", ("")),
    ("auth", ("")),
    ("configuration", ("",)),
]


# elastic
ELASTICSEARCH_DSL = {
    "default": {"hosts": "127.0.0.1:9200/"},
}

ELASTICSEARCH_DSL_AUTO_REFRESH = False


GOOGLE_RECAPTCHA_SITE_KEY = ''
GOOGLE_RECAPTCHA_SECRET_KEY = ''

FILE_UPLOAD_MAX_MEMORY_SIZE = 200000000
FILE_UPLOAD_PERMISSIONS = 0o644
FILE_UPLOAD_HANDLERS = [ 'django.core.files.uploadhandler.MemoryFileUploadHandler', ]
DATA_UPLOAD_MAX_MEMORY_SIZE = 200000000

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'mail_admins'],
            'propagate': True,
            'level': 'WARNING',
        },
    },
}

EMAIL_BACKEND = 'apps.feedback.email_backend.LoggingEmailBackend'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
